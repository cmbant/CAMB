os: linux
language: python

git:
  depth: false

dist: jammy

branches:
  except:
    - CAMB_sources
    - rayleigh

if: (type != pull_request) OR (type = pull_request AND TRAVIS_PULL_REQUEST_SLUG != 'cmbant/camb')

jobs:
  include:
    - if: branch !~ ^test.*
      name: "Focal + Python 3.7"
      dist: focal
      addons:
        apt:
          packages:
            - gfortran
      python: "3.7"
      env:
        - PYPI_DIST="true"
    - if: branch !~ ^test.*
      name: "GCC10 + Python 3.10 anaconda"
      dist: focal
      addons:
        apt:
          packages:
            - gfortran-10
      env:
        - GCC_VERSION="10"
        - CHANNEL="defaults"
        - PYDIST="ANACONDA"
        - FORTRAN="test"
      python: "3.10"
    - name: "Jammy + Python 3.12"
      addons:
        apt:
          packages:
            - gfortran
      python: "3.12"
    - if: branch !~ ^test.*
      name: "GCC trunk cosmobox"
      language: shell
      services:
        - docker
      before_install:
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
          fi
        - docker pull cmbant/cosmobox:devel
      install:
        - chmod +x fortran/tests/run_tests.sh
      script:
        - docker run -v $(pwd):/camb  -t cmbant/cosmobox:devel /bin/bash -c "cd /camb; fortran/tests/run_tests.sh"
      after_failure:
        - echo "docker fail"

install:
  - if [[ "$PYDIST" == "ANACONDA" ]]; then
      wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda info -a;
      conda create -q -n test-environment -c $CHANNEL python=$TRAVIS_PYTHON_VERSION numpy scipy sympy;
      source activate test-environment;
    fi
  - if [[ "$FORTRAN" == "test" ]]; then
      mkdir -p gfortran-symlinks;
      ln -s /usr/bin/gfortran-$GCC_VERSION gfortran-symlinks/gfortran;
      export PATH=$PWD/gfortran-symlinks:$PATH;
    fi
  - if [[ "$GCC_VERSION" == "10" ]]; then
      export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgfortran.so.5;
    fi
  - gfortran --version
  - chmod +x fortran/tests/run_tests.sh
  - pip install flake8

script:
  - flake8 camb --select=E713,E704,E703,E714,E10,E11,E20,E22,E23,E25,E27,E301,E302,E304,E9,E741,F405,F406,F5,F6,F7,F8,W1,W2,W3,W6 --show-source --statistics
  - fortran/tests/run_tests.sh

after_failure:
  - test $TRAVIS_PULL_REQUEST == "false" && test $PYPI_DIST == "true" && test $TRAVIS_REPO_SLUG == "cmbant/CAMB" && [ -d fortran/testfiles ] && bash fortran/tests/upload_tests.sh

